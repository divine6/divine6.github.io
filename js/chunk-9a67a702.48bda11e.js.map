{"version":3,"sources":["webpack:///./src/resources/mixins/two-way/index.ts","webpack:///./node_modules/core-js/internals/string-multibyte.js"],"names":["this","bindValue","value","$emit","TwoWay","toInteger","requireObjectCoercible","createMethod","CONVERT_TO_STRING","$this","pos","first","second","S","String","position","size","length","undefined","charCodeAt","charAt","slice","module","exports","codeAt"],"mappings":"8IAKA,2B,+CAaA,OAboC,oBAMhC,sBAAI,2BAAY,C,IAAhB,WACI,OAAOA,KAAKC,W,IAGhB,SAAiBC,GACbF,KAAKG,MAAM,cAAeD,I,gCAR9B,gBAFC,iBACA,eAAM,gB,gCAFUE,EAAM,gBAD1B,QACoBA,GAarB,EAbA,CAAoC,QAAf,U,qBCLrB,IAAIC,EAAY,EAAQ,QACpBC,EAAyB,EAAQ,QAGjCC,EAAe,SAAUC,GAC3B,OAAO,SAAUC,EAAOC,GACtB,IAGIC,EAAOC,EAHPC,EAAIC,OAAOR,EAAuBG,IAClCM,EAAWV,EAAUK,GACrBM,EAAOH,EAAEI,OAEb,OAAIF,EAAW,GAAKA,GAAYC,EAAaR,EAAoB,QAAKU,GACtEP,EAAQE,EAAEM,WAAWJ,GACdJ,EAAQ,OAAUA,EAAQ,OAAUI,EAAW,IAAMC,IACtDJ,EAASC,EAAEM,WAAWJ,EAAW,IAAM,OAAUH,EAAS,MAC1DJ,EAAoBK,EAAEO,OAAOL,GAAYJ,EACzCH,EAAoBK,EAAEQ,MAAMN,EAAUA,EAAW,GAA+BH,EAAS,OAAlCD,EAAQ,OAAU,IAA0B,SAI7GW,EAAOC,QAAU,CAGfC,OAAQjB,GAAa,GAGrBa,OAAQb,GAAa","file":"js/chunk-9a67a702.48bda11e.js","sourcesContent":["import {\r\n    Vue, Component, Prop, Model,\r\n} from 'vue-property-decorator';\r\n/** Mixin：双向绑定 */\r\n@Component\r\nexport default class TwoWay extends Vue {\r\n    @Prop()\r\n    @Model('valueUpdate')\r\n    bindValue!: any;\r\n\r\n    /** 双向绑定数据 */\r\n    get currentValue() {\r\n        return this.bindValue;\r\n    }\r\n\r\n    set currentValue(value) {\r\n        this.$emit('valueUpdate', value);\r\n    }\r\n}\r\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n"],"sourceRoot":""}